#! /usr/bin/env python3

import asyncio
import re
import sys
from pathlib import Path
from typing import cast

from mautrix import client
from mautrix.types.event.state import RoomNameStateEventContent
from mautrix.types.event.type import EventType
from mautrix.types.primitive import UserID

here = Path(__file__).parent

match_re = re.compile(sys.argv[1])


async def main():
    c = client.Client(base_url="http://localhost:8008")
    await c.login(identifier=UserID("@sumner:localhost"), password="oheaqfuy1234")

    rooms = await c.get_joined_rooms()
    to_leave = []
    for room_id in rooms:
        try:
            name = cast(
                RoomNameStateEventContent,
                await c.get_state_event(room_id, EventType.ROOM_NAME),
            ).name
            if match_re.fullmatch(name):
                to_leave.append((room_id, name))
        except Exception:
            pass

    print("Delete the following rooms?")
    for room_id, name in to_leave:
        print(room_id, name)

    resp = input()
    if resp.lower() == "y":
        for room_id, _ in to_leave:
            await c.leave_room(room_id)
    else:
        print("Cancelling")

    await c.logout()

asyncio.run(main())
